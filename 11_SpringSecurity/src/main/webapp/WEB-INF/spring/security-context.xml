<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security https://www.springframework.org/schema/security/spring-security.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">

   <bean id="customLoginSuccess" 
   class="com.myspring.security.domain.CustomLoginSuccessHandler"/>
   
   	<!-- 암호화 -->   
	<bean id="bcryptPasswordEncoder" 
	class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder">	
	</bean>
	
	<bean id="customUserDetailsService"
	 class="com.myspring.security.domain.CustomUserDetailsService"/>
	
	<security:http>	    
	   <!--로그인 페이지 이동-->
		<!--<security:form-login  login-page="/customLogin" 
	     authentication-success-handler-ref="customLoginSuccess"/>
	       -->      
	     
	    <security:form-login  login-page="/customLogin"  /> 
	    
	    <security:csrf disabled="true"/><!-- 403에러처리 -->
	    
	   
	    <!-- intercept를 넣어주면 url에 주소값을 넣으면 인증된 사람은 바로 접근이 가능함 -->
	  <security:intercept-url  pattern="/sample/all"  access="permitAll"/>
	    <security:intercept-url  pattern="/sample/member"  
	    	    access="hasRole('ROLE_MEMBER')" />
	     <security:intercept-url  pattern="/sample/admin"  
	    	    access="hasRole('ROLE_ADMIN')" /> 
	    
	    <!-- 로그아웃 페이지 이동 (Post방식)-->
		<security:logout logout-url="/customLogout" invalidate-session="true"
		delete-cookies="remember-me,JSESSION_ID"/>
		
		<!-- remember-me라는 checkbox -->
		<security:remember-me data-source-ref="dataSource"
		token-validity-seconds="604800"/>

		
		
	</security:http>
	
	
	<security:authentication-manager>
		<security:authentication-provider 
		     user-service-ref="customUserDetailsService">
		<security:password-encoder ref="bcryptPasswordEncoder"/>
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
